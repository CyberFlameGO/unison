-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package unison-util-base32hex
@version 0.0.0

module U.Util.Base32Hex
newtype Base32Hex
UnsafeFromText :: Text -> Base32Hex

-- | Return the lowercase unpadded base32Hex encoding of this
--   <a>ByteString</a>. Multibase prefix would be <tt>v</tt>, see
--   <a>https://github.com/multiformats/multibase</a>
fromByteString :: ByteString -> Base32Hex

-- | Produce a <tt>Hash</tt> from a base32hex-encoded version of its binary
--   representation
toByteString :: Base32Hex -> ByteString
fromText :: Text -> Maybe Base32Hex
toText :: Base32Hex -> Text
validChars :: Set Char
instance GHC.Show.Show U.Util.Base32Hex.Base32Hex
instance GHC.Classes.Ord U.Util.Base32Hex.Base32Hex
instance GHC.Classes.Eq U.Util.Base32Hex.Base32Hex

module U.Util.Hash

-- | Hash which uniquely identifies a Unison type or term
newtype Hash
Hash :: ShortByteString -> Hash
[toShort] :: Hash -> ShortByteString

-- | Constructs a hash from base32 checks without any validation. Note that
--   this converts Text -&gt; ByteString -&gt; ShortByteString and so is
--   slower than we'd prefer.
unsafeFromBase32HexText :: Text -> Hash
fromBase32HexText :: Text -> Maybe Hash
fromBase32Hex :: Base32Hex -> Hash
fromByteString :: ByteString -> Hash
toBase32Hex :: Hash -> Base32Hex
toBase32HexText :: Hash -> Text
toByteString :: Hash -> ByteString

-- | A hash tagged with the type it's a hash of, useful for maintaining
--   type safety guarantees.
newtype HashFor t
HashFor :: Hash -> HashFor t
[genericHash] :: HashFor t -> Hash
instance GHC.Generics.Generic U.Util.Hash.Hash
instance GHC.Classes.Ord U.Util.Hash.Hash
instance GHC.Classes.Eq U.Util.Hash.Hash
instance GHC.Generics.Generic (U.Util.Hash.HashFor t)
instance GHC.Classes.Ord (U.Util.Hash.HashFor t)
instance GHC.Classes.Eq (U.Util.Hash.HashFor t)
instance GHC.Show.Show (U.Util.Hash.HashFor t)
instance GHC.Show.Show U.Util.Hash.Hash


-- | A 512-bit hash, internally represented as base32hex.
module U.Util.Hash32

-- | A 512-bit hash, internally represented as base32hex.
--   
--   Some orphan instances provided in:
--   
--   <ul>
--   <li><pre>unison-util-base32hex-orphans-aeson</pre></li>
--   <li><pre>unison-util-base32hex-orphans-sqlite</pre></li>
--   </ul>
newtype Hash32
UnsafeFromBase32Hex :: Base32Hex -> Hash32
fromHash :: Hash -> Hash32
toHash :: Hash32 -> Hash

-- | Convert base32hex to a hash32 (asserting that it is a 512-bit hash).
unsafeFromBase32Hex :: Base32Hex -> Hash32

-- | Convert a hash32 to base32hex.
toBase32Hex :: Hash32 -> Base32Hex
toText :: Hash32 -> Text
instance GHC.Show.Show U.Util.Hash32.Hash32
instance GHC.Classes.Ord U.Util.Hash32.Hash32
instance GHC.Classes.Eq U.Util.Hash32.Hash32
