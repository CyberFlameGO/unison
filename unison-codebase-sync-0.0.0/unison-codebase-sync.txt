-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package unison-codebase-sync
@version 0.0.0

module U.Codebase.Sync
debug :: Bool
data TrySyncResult h
Missing :: [h] -> TrySyncResult h
Done :: TrySyncResult h
PreviouslyDone :: TrySyncResult h
NonFatalError :: TrySyncResult h
data Sync m h
Sync :: (h -> m (TrySyncResult h)) -> Sync m h
[trySync] :: Sync m h -> h -> m (TrySyncResult h)
transformSync :: (forall a. m a -> n a) -> Sync m h -> Sync n h
data Progress m h
Progress :: (h -> m ()) -> (h -> m ()) -> (h -> m ()) -> m () -> Progress m h
[need] :: Progress m h -> h -> m ()
[done] :: Progress m h -> h -> m ()
[error] :: Progress m h -> h -> m ()
[allDone] :: Progress m h -> m ()
transformProgress :: (forall a. m a -> n a) -> Progress m h -> Progress n h

-- | Calls <a>allDone</a> at the end
sync :: forall m h. (Monad m, Show h) => Sync m h -> Progress m h -> [h] -> m ()

-- | Doesn't call <a>allDone</a> at the end, in case you plan to call sync
--   more than once.
sync' :: forall m h. (Monad m, Show h) => Sync m h -> Progress m h -> [h] -> m ()
instance GHC.Show.Show h => GHC.Show.Show (U.Codebase.Sync.TrySyncResult h)
